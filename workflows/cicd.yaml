# This is CI/CD version 0.3.0
name: CI/CD

on:
  push:

jobs:
  # Run tests for on push
  test:
    name: Run Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Install node modules (if present)"
        run: bash -c 'if [ -f package.json ]; then npm i ; fi'

      - name: "Run .cicd/test.sh script (if present)"
        run: bash -c 'if [ -f ./.cicd/test.sh ]; then ./.cicd/test.sh ; fi'

  # Publish for tags starting with "v"
  publish:
    name: Deployment
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.x
          registry-url: "https://registry.npmjs.org"

      - name: "Install node modules (if present)"
        run: bash -c 'if [ -f package.json ]; then npm i ; fi'

      #
      # Make sure package.json's version field and
      # tag name are consistent.
      #
      - name: "Validate package.json version (if present)"
        run: bash -c 'if [ -f package.json ]; then clean_ver="$(printf "%s" "${{ github.ref_name }}" | cut -c2-)" ; grep -q "\"$clean_ver\"" package.json ; fi'

      - name: "Run .cicd/deploy.sh script"
        run: ./.cicd/deploy.sh
        env:
          RELEASE_VERSION: ${{ github.ref_name }}

          NODE_AUTH_TOKEN: ${{ secrets.ANIO_NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.ANIO_NPM_TOKEN }}

          ANIO_SH_DEPLOY_URL: ${{ secrets.ANIO_SH_DEPLOY_URL }}
          ANIO_SH_DEPLOY_KEY: ${{ secrets.ANIO_SH_DEPLOY_KEY }}
